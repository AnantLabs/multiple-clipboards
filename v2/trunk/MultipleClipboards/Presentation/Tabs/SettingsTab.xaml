<UserControl x:Class="MultipleClipboards.Presentation.Tabs.SettingsTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Layout="clr-namespace:MultipleClipboards.Presentation.Layout"
             xmlns:Converters="clr-namespace:MultipleClipboards.Presentation.Converters"
             xmlns:Controls="clr-namespace:MultipleClipboards.Presentation.Controls"
             xmlns:MultipleClipboards="clr-namespace:MultipleClipboards"
             xmlns:Persistence="clr-namespace:MultipleClipboards.Persistence"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type System:Enum}" x:Key="ModifierKeysEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="ModifierKeys" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type System:Enum}" x:Key="LogLevelEnumValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Persistence:LogLevel" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Converters:EnumToStringConverter x:Key="EnumToStringConverter" />
        <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch" Layout:MarginSetter.Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Settings Tab Grid - Row 0 -->
        <GroupBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Name="ProgramSettingsGroupBox" HorizontalAlignment="Stretch" VerticalAlignment="Top" Header="Program Settings">
            <StackPanel>
                <!-- Basic Settings Grid -->
                <Grid Layout:MarginSetter.Margin="2,5,2,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="142" Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Basic Settings Grid - Row 0 -->
                    <Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=NumberOfHistoricalRecordsTextBox}">
                        <AccessText>Clipboard History Size:</AccessText>
                    </Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Width="70" Name="NumberOfHistoricalRecordsTextBox" Text="{Binding NumberOfClipboardHistoryRecords, Source={x:Static MultipleClipboards:AppController.Settings}}"></TextBox>

                    <Label Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Target="{Binding ElementName=LaunchApplicationOnStarupCheckBox}">
                        <AccessText>Launch Application on Starup</AccessText>
                    </Label>
                    <CheckBox Grid.Row="0" Grid.Column="3" Name="LaunchApplicationOnStarupCheckBox" VerticalAlignment="Center" IsChecked="{Binding LaunchApplicationOnSystemStartup, Source={x:Static MultipleClipboards:AppController.Settings}}"></CheckBox>

                    <!-- Basic Settings Grid - Row 1 -->
                    <Label Grid.Row="1" Grid.Column="0" Target="{Binding ElementName=ShowAdvancedOptionsCheckBox}">
                        <AccessText>Show Advanced Options</AccessText>
                    </Label>
                    <CheckBox Grid.Row="1" Grid.Column="1" Name="ShowAdvancedOptionsCheckBox" VerticalAlignment="Center" IsChecked="{Binding ShowAdvancedOptions, Source={x:Static MultipleClipboards:AppController.Settings}}"></CheckBox>
                </Grid>

                <!-- Advanced Settings Grid -->
                <Grid Visibility="{Binding Path=IsChecked, ElementName=ShowAdvancedOptionsCheckBox, Converter={StaticResource BooleanToVisibilityConverter}}" Layout:MarginSetter.Margin="2,5,2,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="142" Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Advanced Settings Grid - Row 0 -->
                    <Label Grid.Row="0" Grid.Column="0" Target="{Binding ElementName=ThreadDelayTimeTextBox}">
                        <AccessText>Thread Delay Time (ms):</AccessText>
                    </Label>
                    <TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="Left" Width="70" Name="ThreadDelayTimeTextBox" Text="{Binding ThreadDelayTime, Source={x:Static MultipleClipboards:AppController.Settings}}"></TextBox>

                    <Label Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Target="{Binding ElementName=NumberOfClipboardOperationRetriesTextBox}">
                        <AccessText># of Clipboard Operation Retries:</AccessText>
                    </Label>
                    <TextBox Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="3" HorizontalAlignment="Right" Width="70" Name="NumberOfClipboardOperationRetriesTextBox" Text="{Binding NumberOfClipboardOperationRetries, Source={x:Static MultipleClipboards:AppController.Settings}}"></TextBox>

                    <!-- Advanced Settings Grid - Row 1 -->
                    <Label Grid.Row="1" Grid.Column="0" Target="{Binding ElementName=LogLevelComboBox}">
                        <AccessText>Application Log Level:</AccessText>
                    </Label>
                    <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="Left" Width="70" Name="LogLevelComboBox" ItemsSource="{Binding Source={StaticResource LogLevelEnumValues}}" SelectedItem="{Binding ApplicationLogLevel, Source={x:Static MultipleClipboards:AppController.Settings}}"></ComboBox>
                </Grid>
            </StackPanel>
        </GroupBox>

        <!-- Settings Tab Grid - Row 1 -->
        <GroupBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="ClipboardDefinitionGroupBox" HorizontalAlignment="Stretch" VerticalAlignment="Top" Header="Clipboard Definition">
            <Grid Layout:MarginSetter.Margin="2,5,2,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="60" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Clipboard Definition Grid - Row 0 -->
                <TextBlock Grid.Row="0" Grid.Column="0"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="Modifier Key 1"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Modifier Key 2"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="3" Text="Copy Key"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="Cut Key"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="5" Grid.ColumnSpan="2" Text="Paste Key"></TextBlock>

                <!-- Clipboard Definition Grid - Row 1 -->
                <TextBlock Grid.Row="1" Grid.Column="0"></TextBlock>
                <ComboBox Grid.Row="1" Grid.Column="1" Name="ModifierKeyOneComboBox" />
                <ComboBox Grid.Row="1" Grid.Column="2" Name="ModifierKeyTwoComboBox" SelectedIndex="0" ItemsSource="{Binding Source={StaticResource ModifierKeysEnumValues}}" />
                <TextBox Grid.Row="1" Grid.Column="3" Name="CopyKeyTextBox"></TextBox>
                <TextBox Grid.Row="1" Grid.Column="4" Name="CutKeyTextBox"></TextBox>
                <TextBox Grid.Row="1" Grid.Column="5" Name="PasteKeyTextBox"></TextBox>
                <Controls:IconButton Grid.Row="1" Grid.Column="6" x:Name="AddNewClipboardButton" Click="AddNewClipboardButtonClick" Icon="Add" Text="Add" />

                <!-- Clipboard Definition Grid - Row 2 -->
                <DataGrid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="7" AutoGenerateColumns="False" ItemsSource="{Binding ClipboardDefinitions, Source={x:Static MultipleClipboards:AppController.Settings}}" Name="ClipboardDefinitionDataGrid" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" GridLinesVisibility="Horizontal" AreRowDetailsFrozen="False" CanUserResizeRows="False" UseLayoutRounding="False" IsReadOnly="True" HorizontalScrollBarVisibility="Hidden">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="DataGridRowHeader">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </DataGrid.RowHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Foreground" Value="Black" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False" Width="20">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ClipboardId}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ModifierOneKey, Converter={StaticResource EnumToStringConverter}}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ModifierTwoKey, Converter={StaticResource EnumToStringConverter}}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CopyKey, Converter={StaticResource EnumToStringConverter}}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding CutKey, Converter={StaticResource EnumToStringConverter}}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False" Width="60">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PasteKey, Converter={StaticResource EnumToStringConverter}}"></TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserReorder="False" CanUserResize="False" CanUserSort="False" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Content="Delete" Click="DeleteButtonClick" Cursor="Hand">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <TextBlock TextDecorations="Underline">
													<ContentPresenter />
                                                </TextBlock>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Foreground" Value="Blue" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
